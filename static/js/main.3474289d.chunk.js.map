{"version":3,"sources":["Select.js","ImageContainer.js","NavBar.js","MainContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Select","props","handleChange","bind","event","select","target","selectedId","options","selectedIndex","getAttribute","this","onSelectChange","value","onChange","map","breed","id","name","React","Component","ImageContainer","className","src","NavBar","handleClick","selectedItem","onClick","items","i","count","push","data-id","MainContainer","handleSelectListItem","index","state","setState","imageSrc","images","url","handleSelectChange","selectedBreedId","breeds","isLoading","getListOfBread","fetch","then","response","json","setBreeds","getSelectedBreedImages","selectedBreed","filter","undefined","newImages","getSelectedBreed","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3474289d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Select.css'\r\n\r\nclass Select extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    let select = event.target;\r\n    let selectedOptions = select.options[select.selectedIndex];\r\n    let selectedId = selectedOptions.getAttribute('id');\r\n\r\n    this.props.onSelectChange(selectedId);\r\n  }\r\n    render () {\r\n        return (\r\n             <select value={this.props.value} onChange={this.handleChange} >\r\n                {this.props.options.map((breed) =>\r\n                    <option id={breed[\"id\"]} key={breed[\"id\"]}>{breed.name}</option>\r\n                )}\r\n             </select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport './ImageContainer.css';\r\n\r\nclass ImageContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n  }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"image-container\">\r\n                <img src={this.props.src} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageContainer;\r\n","import React from 'react';\r\nimport './NavBar.css';\r\n\r\nclass NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(event) {\r\n    let list = event.target;\r\n    let selectedItem = list.getAttribute('data-id');\r\n\r\n    this.props.onClick(selectedItem);\r\n  }\r\n\r\n    render () {\r\n        let items = [];\r\n        for (let i = 0; i < this.props.count; i += 1) {\r\n            items.push(<li key={i} data-id={i}></li>)\r\n        }\r\n        return (\r\n             <ul className=\"nav\" onClick={this.handleClick}>\r\n                {items}\r\n             </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './MainContainer.css'\r\nimport Select from './Select.js';\r\nimport ImageContainer from './ImageContainer.js';\r\nimport NavBar from './NavBar.js';\r\n\r\nclass MainContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleSelectListItem = this.handleSelectListItem.bind(this);\r\n        this.state = {\r\n            selectedBreedId: '',\r\n            breeds: [],\r\n            imageSrc: '',\r\n            images: [],\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getListOfBread();\r\n    }\r\n\r\n    getListOfBread() {\r\n       let url = 'https://api.thecatapi.com/v1/breeds?attach_breed=0';\r\n       let promise = fetch(url)\r\n           .then(response => response.json())\r\n           .then(breeds => {\r\n               this.setBreeds(breeds);\r\n               this.getSelectedBreedImages(breeds[0]['id']);\r\n           });\r\n   }\r\n\r\n   setBreeds(breeds) {\r\n       this.setState({\r\n        breeds: breeds\r\n      });\r\n  }\r\n\r\n    handleSelectChange(id) {\r\n        this.setState({\r\n         selectedBreedId: id\r\n       });\r\n        this.getSelectedBreedImages(id);\r\n    }\r\n\r\n    handleSelectListItem = (index) => {\r\n        let state = this.state;\r\n\r\n        this.setState({\r\n            imageSrc: state.images[index].url\r\n        });\r\n    }\r\n\r\n    getSelectedBreed() {\r\n        let selectedBreed = this.state.breeds.filter(breed => breed.id === this.state.selectedBreedId)[0];\r\n        if (selectedBreed === undefined) return {};\r\n        return selectedBreed;\r\n    }\r\n\r\n    getSelectedBreedImages(id) {\r\n        this.setState({ isLoading: true });\r\n        let url= 'https://api.thecatapi.com/v1/images/search?limit=10&breed_id='+ id;\r\n        let promise = fetch(url)\r\n           .then(response => response.json())\r\n           .then(newImages => {\r\n               this.setState({\r\n                images: newImages,\r\n                imageSrc: newImages[0].url,\r\n                isLoading: false\r\n              });\r\n           });\r\n   }\r\n\r\n    render () {\r\n        if (this.state.isLoading) {\r\n            return <div className=\"loader\">Loading...</div>\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"main-container\">\r\n                    <Select\r\n                        value={this.getSelectedBreed().name}\r\n                        options={this.state.breeds}\r\n                        onSelectChange={this.handleSelectChange}\r\n                    />\r\n                    <ImageContainer src={this.state.imageSrc}/>\r\n                    <NavBar\r\n                        count={this.state.images.length}\r\n                        onClick={this.handleSelectListItem}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\nimport './App.css';\nimport MainContainer from './MainContainer.js';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render () {\n        return (\n            <MainContainer />\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}